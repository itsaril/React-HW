// src/App.jsx

// 1. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ö—É–∫–∏
import { useState, useEffect } from 'react';

// 2. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
//...
import Search from "./components/Search.jsx";
import FlowerCard from "./components/FlowerCard.jsx";
import FlowerDetail from "./components/FlowerDetail.jsx";

// 3. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏
import './App.css';

// === !!! –í–ê–ñ–ù–û !!! ===
// –í–°–¢–ê–í–¨ –°–Æ–î–ê –°–í–û–ô –ö–õ–Æ–ß, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø–æ–ª—É—á–∏–ª–∞ —Å perenual.com
const API_KEY = "sk-NpyG68f8c75b17a6b13054"; 
// –ù–∞–ø—Ä–∏–º–µ—Ä: const API_KEY = "sk-xxxx....";

function App() {
  
  // --- STATE (–°–æ—Å—Ç–æ—è–Ω–∏–µ) ---
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º useState –∏–∑ –ª–µ–∫—Ü–∏–π
  
  // 1. –î–ª—è —Å–ø–∏—Å–∫–∞ —Ü–≤–µ—Ç–æ–≤ —Å API
  const [flowerList, setFlowerList] = useState([]);
  // 2. –î–ª—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const [searchQuery, setSearchQuery] = useState("rose");
  // 3. –î–ª—è –ø–æ–∫–∞–∑–∞ "—Å—Ç—Ä–∞–Ω–∏—Ü—ã" —Å –¥–µ—Ç–∞–ª—è–º–∏ (—É—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥)
  const [selectedFlower, setSelectedFlower] = useState(null);
  // 4. –î–ª—è Loading... –∏ Error... (–∏–∑ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤)
  const [isLoading, setIsLoading] = useState(true);
  const [isError, setIsError] = useState(null);

  // --- EFFECTS (–≠—Ñ—Ñ–µ–∫—Ç—ã) ---
  
  // –≠—Ç–æ—Ç useEffect –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å –°–ü–ò–°–û–ö —Ü–≤–µ—Ç–æ–≤
  // –û–Ω —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –∫–æ–≥–¥–∞ 'searchQuery' –∏–∑–º–µ–Ω–∏—Ç—Å—è
  useEffect(() => {
    // –ù–µ –∏—â–µ–º, –µ—Å–ª–∏ –∫–ª—é—á –Ω–µ –≤—Å—Ç–∞–≤–ª–µ–Ω
    if (API_KEY === "YOUR_KEY_HERE") {
      setIsError("Please add your API key to App.jsx");
      setIsLoading(false);
      return;
    }
    
    // –ù–µ –∏—â–µ–º, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞—è
    if (!searchQuery) {
      setFlowerList([]);
      setIsLoading(false);
      return;
    }

    setIsLoading(true); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–ó–∞–≥—Ä—É–∑–∫–∞..."
    setIsError(null);   // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ä—É—é –æ—à–∏–±–∫—É
    
    // –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º /api/... –∏–∑-–∑–∞ proxy –≤ vite.config.js
    const url = `/api/api/v2/species-list?key=${API_KEY}&q=${searchQuery}`;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º fetch (Promise) –∏–∑ –ª–µ–∫—Ü–∏–π
    fetch(url)
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        setFlowerList(data.data); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞—Å—Å–∏–≤ —Ü–≤–µ—Ç–æ–≤ –≤ state
        setIsLoading(false); // –í—ã–∫–ª—é—á–∞–µ–º "–ó–∞–≥—Ä—É–∑–∫–∞..."
      })
      .catch(error => {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ (–∏–∑ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤)
        console.error('Fetch error:', error);
        setIsError(error.message);
        setIsLoading(false);
      });
      
  }, [searchQuery]); // –ú–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

  // --- HANDLERS (–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π) ---
  
  // –≠—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –∫–∞–∫ prop –≤ <Search>
  const handleSearch = (query) => {
    setSearchQuery(query); // –û–±–Ω–æ–≤–ª—è–µ–º state
    setSelectedFlower(null); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏, –µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏ –æ—Ç–∫—Ä—ã—Ç—ã
  };

  // –≠—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –≤ <FlowerDetail>
  const handleBackClick = () => {
    setSelectedFlower(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É
  };

  // --- RENDER (–û—Ç—Ä–∏—Å–æ–≤–∫–∞) ---
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–∑–∞–≥—Ä—É–∑–∫–∞, –æ—à–∏–±–∫–∞, —Å–ø–∏—Å–æ–∫)
  const renderContent = () => {
    if (isLoading) {
      return <div className="message-container">Loading flowers... üå∏</div>;
    }
    
    if (isError) {
      return <div className="message-container">Error: {isError} üò¢</div>;
    }
    
    if (flowerList.length === 0 && searchQuery) {
      return <div className="message-container">No flowers found. Try another search.</div>;
    }

    // –†–µ–Ω–¥–µ—Ä–∏–º —Å–ø–∏—Å–æ–∫, –∏—Å–ø–æ–ª—å–∑—É—è .map()
    return (
      <div className="flower-list">
        {flowerList.map(flower => (
          <FlowerCard
            key={flower.id}
            flower={flower}
            // –ü–µ—Ä–µ–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–æ–º–Ω–∏—Ç, –∫–∞–∫–æ–π —Ü–≤–µ—Ç–æ–∫ –≤—ã–±—Ä–∞–ª–∏
            onClick={() => setSelectedFlower(flower)}
          />
        ))}
      </div>
    );
  }

  // --- –ì–õ–ê–í–ù–´–ô RETURN ---
  
  return (
    <>
      <header className="header">
        <h1>Bloomify</h1>
        <p>Find your next favorite flower</p>
      </header>

      {/* –£—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥:
        - –ï—Å–ª–∏ 'selectedFlower' –ù–ï null, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º <FlowerDetail>
        - –ò–Ω–∞—á–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º <Search> –∏ —Å–ø–∏—Å–æ–∫
      */}
      
      {selectedFlower ? (
        <FlowerDetail 
          flower={selectedFlower} 
          onBack={handleBackClick} 
        />
      ) : (
        <>
          <Search onSearch={handleSearch} />
          {renderContent()}
        </>
      )}
    </>
  );
}

export default App;